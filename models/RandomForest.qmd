---
title: "Random Forest Model"
format: html
editor: visual
---

## Random Forest Model

```{r}
load("/Users/ashleyson/Desktop/Playlist_Random_Forest.rda")
```

```{r}
# Setup a random forest model and workflow. Use the `ranger` engine and set 
#`importance = "impurity"`. Let's also tune `mtry`, `trees`, and `min_n`.
playlist_rand_forest_spec <- rand_forest(mtry = tune(), trees = tune(), min_n = tune()) %>%
  set_engine("ranger", importance = "impurity") %>%
  set_mode("classification")


playlist_rand_forest_wf <- workflow() %>%
  add_recipe(music_recipe) %>%
  add_model(playlist_rand_forest_spec)


# creating parameter grid to tune ranges of hyper parameters
playlist_rf_param_grid <- grid_regular(mtry(range = c(2, 15)), trees(range = c(2, 10)), 
                                  min_n(range = c(2, 8)), levels = 8)
```

```{r}
# ROC AUC
# Next, let's fit the models to our folded data using `tune_grid()`
playlist_rf_tune_res_auc <- tune_grid(
  playlist_rand_forest_wf, 
  resamples = playlist_folds, 
  grid = playlist_rf_param_grid, 
  metrics = metric_set(yardstick::roc_auc)
)


# find the `roc_auc` of best-performing random forest tree on the folds
# use `collect_metrics()` and `arrange()`
playlist_best_rd_auc <- dplyr::arrange(collect_metrics(playlist_rf_tune_res_auc), desc(mean))
head(playlist_best_rd_auc)


# select the random forest with the best `roc_auc`
best_rf_complexity_auc <- select_best(playlist_rf_tune_res_auc)


# use `finalize_workflow()` and `fit()` to fit the model to the training set
playlist_rf_final_auc <- finalize_workflow(playlist_rand_forest_wf, best_rf_complexity_auc)
playlist_rf_final_fit_auc <- fit(playlist_rf_final_auc, data = playlist_train)
```

```{r}
# ACCURACY
# Next, let's fit the models to our folded data using `tune_grid()`
playlist_rf_tune_res_accuracy <- tune_grid(
  playlist_rand_forest_wf, 
  resamples = playlist_folds, 
  grid = playlist_rf_param_grid, 
  metrics = metric_set(accuracy)
)


# find the `accuracy` of best-performing random forest tree on the folds
# use `collect_metrics()` and `arrange()`
playlist_best_rd_accuracy <- dplyr::arrange(collect_metrics(playlist_rf_tune_res_accuracy), desc(mean))
head(playlist_best_rd_accuracy)


# select the random forest with the best `accuracy`
best_rf_complexity_accuracy <- select_best(playlist_rf_tune_res_accuracy)


#use `finalize_workflow()` and `fit()` to fit the model to the training set
playlist_rf_final_accuracy <- finalize_workflow(playlist_rand_forest_wf, best_rf_complexity_accuracy)
playlist_rf_final_fit_accuracy <- fit(playlist_rf_final_accuracy, data = playlist_train)

```

```{r}
# saving data to load into rmd file
save(playlist_rf_tune_res_auc, playlist_rf_final_fit_auc, playlist_best_rd_auc,
     playlist_rf_tune_res_accuracy, playlist_rf_final_fit_accuracy, playlist_best_rd_accuracy, 
     file = "/Users/ashleyson/Desktop/Playlist_Random_Forest.rda")
```
