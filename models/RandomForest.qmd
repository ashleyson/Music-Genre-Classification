---
title: "Random Forest Model"
format: html
editor: visual
---

## Random Forest Model

```{r}
playlist_rand_forest_spec <- rand_forest(mtry = tune(), trees = tune(), min_n = tune()) %>%
  set_engine("ranger", importance = "impurity") %>%
  set_mode("classification")

playlist_rand_forest_wf <- workflow() %>%
  add_recipe(music_recipe) %>%
  add_model(playlist_rand_forest_spec)


# creating parameter grid to tune ranges of hyper parameters
playlist_rf_param_grid <- grid_regular(mtry(range = c(2, 15)), trees(range = c(2, 10)), 
                                  min_n(range = c(2, 8)), levels = 8)

playlist_rf_tune_res_auc <- tune_grid(
  playlist_rand_forest_wf, 
  resamples = playlist_folds, 
  grid = playlist_rf_param_grid, 
  metrics = metric_set(yardstick::roc_auc)
)

```

```{r}
playlist_best_rd_auc <- dplyr::arrange(collect_metrics(playlist_rf_tune_res_auc), desc(mean))
head(playlist_best_rd_auc)


best_rf_complexity_auc <- select_best(playlist_rf_tune_res_auc)

playlist_rf_final_auc <- finalize_workflow(playlist_rand_forest_wf, best_rf_complexity_auc)
playlist_rf_final_fit_auc <- fit(playlist_rf_final_auc, data = playlist_train)
```

```{r}
save(playlist_rand_forest_spec,playlist_rand_forest_wf,playlist_rf_param_grid, playlist_rf_tune_res_auc, playlist_best_rd_auc,best_rf_complexity_auc,
     playlist_rf_final_auc, playlist_rf_final_fit_auc,file = "/Users/ashleyson/Desktop/Music-Genre-Classification/RDA/Playlist_Random_Forest.rda")
```
